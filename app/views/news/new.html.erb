<%= form_with model: @news, url: news_create_path, method: :post, local: true, html: { class: "form", multipart: true } do |form| %>

  <!-- Header Section -->
  <div class="form-header">
    <h1 class="page-title">สร้างข่าวสาร</h1>
    <%= form.submit "+สร้างข่าวสาร", class: "btn btn-disabled", id: "submit-button" %>
  </div>

  <!-- Title -->
  <div class="form-group">
    <label>Title</label>
    <%= form.text_field :title, class: "form-control", id: "news_title", placeholder: "Enter news title" %>
  </div>

  <!-- Content -->
  <div class="form-group">
    <label>Content</label>
    <%= form.text_area :content, class: "form-control textarea", id: "news_content", placeholder: "Enter news content" %>
  </div>

  <!-- Category, Publish Date -->
  <div class="form-row">
    <div class="form-group">
      <label>Category</label>
     <% available_groups =
        if current_user.role.name == 'ผู้ดูแลระบบ'
          AdvisorGroup.pluck(:group_name)
        else
          current_user.advisor_groups.pluck(:group_name)
        end
    %>

    <%= select_tag :category,
        options_for_select(["All"] + available_groups, params[:category]),
        prompt: "Select", class: "form-control select-dropdown", id: "category" %>
    </div>
    <div class="form-group">
      <label>Publish Date</label>
      <%= form.date_field :publish_date, class: "form-control date-picker", id: "news_publish_date" %>
    </div>
  </div>

  <!-- Image Upload Section -->
  <div class="form-group">
    <label>Upload Images</label>
    <div class="image-upload-container">
      <div class="upload-row">
        <div class="banner-upload">
          <label>Banner Image</label>
          <div class="upload-box large preview-wrapper" onclick="document.getElementById('banner_image_input').click();">
            <% if @news.persisted? && @news.banner_image.attached? %>
              <%= image_tag @news.banner_image, id: "banner_preview", class: "preview-image" %>
            <% else %>
              <span class="upload-icon">📤</span>
              <span class="upload-text">Click or drag file</span>
              <span class="upload-info">Recommend size 851 x 315 px</span>
            <% end %>
            <%= form.file_field :banner_image, class: "file-input", id: "banner_image_input", style: "display: none;" %>
          </div>
        </div>

        <div class="gallery-upload">
          <div class="gallery-header">
            <label>More Images</label>
            <span class="gallery-note">(show as gallery)</span>
          </div>

          <div class="upload-box small" onclick="document.getElementById('more_images_input').click();">
            <span class="upload-icon">+</span>
            <span class="upload-text">Upload multiple images</span>

            <%= form.file_field :more_images, multiple: true, direct_upload: true,
              name: "news[more_images][]", id: "more_images_input",
              class: "file-overlay", style: "display: none;" %>
          </div>

          <div class="gallery-preview" id="gallery_preview"></div>
        </div>
      </div>
    </div>
  </div>

<% end %>


<script>
document.addEventListener("DOMContentLoaded", function () {
  const input = document.getElementById("banner_image_input");
  const preview = document.getElementById("banner_preview");

  if (input) {
    input.addEventListener("change", function (e) {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function (event) {
          if (preview) {
            preview.src = event.target.result;
          } else {
            const img = document.createElement("img");
            img.id = "banner_preview";
            img.className = "preview-image";
            img.src = event.target.result;
            input.parentNode.prepend(img);
          }
        };
        reader.readAsDataURL(file);
      }
    });
  }
});
// JavaScript for handling multiple image uploads
document.addEventListener("DOMContentLoaded", function () {
  const input = document.getElementById("more_images_input");
  const previewContainer = document.getElementById("gallery_preview");

  let filesBuffer = [];

  input.addEventListener("change", function (e) {
    const newFiles = Array.from(e.target.files);

    if (filesBuffer.length + newFiles.length > 5) {
      alert("คุณสามารถอัปโหลดได้สูงสุด 5 รูปเท่านั้น");
      input.value = ""; // 👈 แก้บัคตรงนี้ เคลียร์ input ที่ทำให้มันติด
      return;
    }

    newFiles.forEach((file) => {
      filesBuffer.push(file);
    });

    renderPreviews();
  });


  function renderPreviews() {
    // เคลียร์ preview เดิม
    previewContainer.innerHTML = "";

    filesBuffer.forEach((file, index) => {
      const reader = new FileReader();
      reader.onload = function (event) {
        const wrapper = document.createElement("div");
        wrapper.className = "image-wrapper";

        const img = document.createElement("img");
        img.src = event.target.result;
        img.className = "gallery-image";

        const btn = document.createElement("button");
        btn.innerText = "ลบ";
        btn.className = "delete-button";
        btn.onclick = function (e) {
          e.preventDefault();
          filesBuffer.splice(index, 1);
          renderPreviews();
        };

        wrapper.appendChild(img);
        wrapper.appendChild(btn);
        previewContainer.appendChild(wrapper);
      };
      reader.readAsDataURL(file);
    });

    // สร้าง input ใหม่แล้วใส่ไฟล์ทั้งหมดกลับเข้าไป
    const dataTransfer = new DataTransfer();
    filesBuffer.forEach(f => dataTransfer.items.add(f));
    input.files = dataTransfer.files;
  }
});

  document.addEventListener("DOMContentLoaded", function () {
    const requiredFields = ["news_title", "news_content", "category", "news_publish_date"];
    const submitBtn = document.getElementById("submit-button");

    function toggleSubmitButton() {
      const allFilled = requiredFields.every(id => {
        const el = document.getElementById(id);
        return el && el.value.trim() !== "";
      });

      if (allFilled) {
        submitBtn.classList.remove("btn-disabled");
        submitBtn.classList.add("btn-create");
      } else {
        submitBtn.classList.remove("btn-create");
        submitBtn.classList.add("btn-disabled");
      }
    }

    requiredFields.forEach(id => {
      const el = document.getElementById(id);
      if (el) {
        el.addEventListener("input", toggleSubmitButton);
      }
    });

    toggleSubmitButton(); // initial check
  });

</script>
