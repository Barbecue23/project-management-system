<%= form_with model: @news, url: news_update_path(@news), method: :patch, local: true, html: { class: "form", multipart: true } do |f| %>

  <!-- Header Section -->
  <div class="form-header">
    <h1 class="page-title">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£</h1>
    <%= f.submit "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£", class: "btn-create" %>
  </div>

  <!-- Title -->
  <div class="form-group">
    <label>Title</label>
    <%= f.text_field :title, class: "form-control", placeholder: "Enter news title" %>
  </div>

  <!-- Content -->
  <div class="form-group">
    <label>Content</label>
    <%= f.text_area :content, class: "form-control textarea", placeholder: "Enter news content" %>
  </div>

  <!-- Category, Publish Date -->
  <div class="form-row">
    <div class="form-group">
      <label>Category</label>
      <%
  selected_category =
    if params[:category]
      params[:category]
    elsif @news.is_public?
      "All"
    else
      @news.advisor_groups.first&.group_name # ‡∏´‡∏£‡∏∑‡∏≠ .map.join(", ") ‡∏ñ‡πâ‡∏≤‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏•‡∏∏‡πà‡∏°
    end
%>

<%= select_tag :category, options_for_select(["All"] + AdvisorGroup.pluck(:group_name), selected: selected_category), class: "form-control select-dropdown" %>

    </div>
    <div class="form-group">
      <label>Publish Date</label>
      <%= f.date_field :publish_date, class: "form-control date-picker" %>
    </div>
  </div>

  <!-- Image Upload Section -->
  <div class="form-group">
    <label>Upload Images</label>
    <div class="image-upload-container">
        <div class="upload-row">
            <div class="banner-upload">
                <label>Banner Image</label>
                <div class="upload-box large preview-wrapper" onclick="document.getElementById('banner_image_input').click();">
                    <% if @news.banner_image.attached? %>
                    <%= image_tag @news.banner_image, id: "banner_preview", class: "preview-image" %>
                    <% else %>
                    <span class="upload-icon">üì§</span>
                    <span class="upload-text">Click or drag file</span>
                    <span class="upload-info">Recommend size 851 x 315 px</span>
                    <% end %>
                    <%= file_field_tag :banner_image, class: "file-input", id: "banner_image_input", style: "display: none;" %>
                </div>
            </div>
            <div class="gallery-upload">
                <div class="gallery-header">
                    <label>More Images</label>
                    <span class="gallery-note">(show as gallery)</span>
                </div>
                <div class="upload-box small">
                    <span class="upload-icon">+</span>
                    <span class="upload-text">Upload multiple images</span>
                    <%= file_field_tag 'more_images[]', multiple: true, class: "file-input", id: "more_images_input" %>
                </div>
                <div class="gallery-preview" id="gallery_preview">
                    <% @news.more_images.each do |img| %>
                      <%= image_tag img, class: "gallery-image" %>
                    <% end %>
                </div>
            </div>
        </div>
    </div>
  </div>

<% end %>


<script>
document.addEventListener("DOMContentLoaded", function () {
  const input = document.getElementById("banner_image_input");
  const preview = document.getElementById("banner_preview");

  if (input) {
    input.addEventListener("change", function (e) {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function (event) {
          if (preview) {
            preview.src = event.target.result;
          } else {
            const img = document.createElement("img");
            img.id = "banner_preview";
            img.className = "preview-image";
            img.src = event.target.result;
            input.parentNode.prepend(img);
          }
        };
        reader.readAsDataURL(file);
      }
    });
  }
});
// JavaScript for handling multiple image uploads
document.addEventListener("DOMContentLoaded", function () {
  const inputMoreImages = document.getElementById("more_images_input");
  const galleryPreview = document.getElementById("gallery_preview");

  if (inputMoreImages) {
    inputMoreImages.addEventListener("change", function (e) {
      const files = e.target.files; // ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      galleryPreview.innerHTML = ""; // ‡∏•‡∏ö‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô
      for (let i = 0; i < files.length; i++) {
        const file = files[i];
        const reader = new FileReader();
        reader.onload = function (event) {
          const img = document.createElement("img");
          img.src = event.target.result;
          img.classList.add("gallery-image"); // ‡πÉ‡∏ä‡πâ class gallery-image ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
          galleryPreview.appendChild(img);
        };
        reader.readAsDataURL(file); // ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô Data URL
      }
    });
  }
});

</script>
