name: CI and Auto Deploy

on:
  pull_request:
  push:
    branches: [dev]

env:
  IMAGE_NAME: barbecue23/project-management-system

jobs:
  # Scan Ruby for vulnerabilities
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install latest Brakeman
        run: gem install brakeman

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: brakeman --no-pager

  # Scan JS for vulnerabilities
  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  # Lint code for consistent style
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  # Run tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Set up Ruby and dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.1
          bundler-cache: true

      - name: Update RubyGems
        run: gem update --system

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

  # Build and Push Docker Image
  build_and_push:
    runs-on: ubuntu-latest
    needs: test # รันหลังจาก job test เสร็จสิ้น

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:latest

  # Auto Deploy Job
  deploy:
    runs-on: self-hosted # ใช้ self-hosted runner บนเซิร์ฟเวอร์ของคุณ
    needs: build_and_push # รอให้ build_and_push เสร็จสิ้นก่อน

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull latest Docker image
        run: |
          cd /home/nc-user/Project/Dev
          docker-compose -f docker-compose.dev.yml pull  # ดึง Docker image ใหม่จาก registry

      - name: Restart the container with the new image
        run: |
          cd /home/nc-user/Project/Dev
          docker-compose -f docker-compose.dev.yml down  # ปิด container ที่กำลังรันอยู่
          docker-compose -f docker-compose.dev.yml up -d  # เริ่ม container ใหม่ด้วย image ล่าสุด

  # Notify on failure
  notify:
    if: always()
    runs-on: ubuntu-latest
    needs: [scan_ruby, scan_js, lint, test, build_and_push, deploy]
    steps:
      - name: Send Discord notification on failure
        if: failure()
        uses: Ilshidur/action-discord@0.3.1
        with:
          args: "--webhook-url ${{ secrets.DISCORD_WEBHOOK }} --message \"❌ A job failed on ${{ github.ref }} by ${{ github.actor }}. Please check the logs.\""

      - name: Send Discord notification on success
        if: success()
        uses: Ilshidur/action-discord@0.3.1
        with:
          args: "--webhook-url ${{ secrets.DISCORD_WEBHOOK }} --message \"✅ All jobs succeeded on ${{ github.ref }} by ${{ github.actor }}.\""

