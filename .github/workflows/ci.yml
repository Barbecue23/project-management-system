name: CI and Auto Deploy

on:
  pull_request:
  push:
    branches: [dev]

env:
  IMAGE_NAME: barbecue23/project-management-system

jobs:
  # üîç Scan Ruby for vulnerabilities
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install latest Brakeman
        run: gem install brakeman

      - name: Scan for common Rails security vulnerabilities
        run: brakeman --no-pager

  # üîç Scan JS for vulnerabilities
  scan_js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan JavaScript dependencies
        run: bin/importmap audit

  # ‚úÖ Lint code
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: RuboCop Lint
        run: bin/rubocop -f github

  # ‚úÖ Run tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Ruby gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.1
          bundler-cache: true

      - name: Update RubyGems
        run: gem update --system

      - name: Install dependencies
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

  # üê≥ Build & Push Docker Image
  build_and_push:
    runs-on: ubuntu-latest
    needs: [test, scan_js, scan_ruby, lint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_NAME }}:latest

  # üöÄ Auto Deploy
  deploy:
    runs-on: self-hosted
    needs: build_and_push
    env:
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull latest Docker image
        run: |
          cd /home/nc-user/Project/Dev
          docker-compose -f docker-compose.dev.yml pull

      - name: Restart containers with new image
        run: |
          cd /home/nc-user/Project/Dev
          docker-compose -f docker-compose.dev.yml down
          docker-compose -f docker-compose.dev.yml up -d

  üîî Notify on Success or Failure
  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: [scan_ruby, scan_js, lint, test, build_and_push, deploy]
    if: always()
    steps:
      - name: Notify on Failure
        if: failure()
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            ‚ùå A job failed on `${{ github.ref }}` by `${{ github.actor }}`.
            Please check the logs.
          include-details: 'true'

      - name: Notify on Success
        if: success()
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          message: |
            ‚úÖ All jobs succeeded on `${{ github.ref }}` by `${{ github.actor }}`.
          include-details: 'true'
